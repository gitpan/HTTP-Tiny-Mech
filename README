NAME
    HTTP::Tiny::Mech - Wrap a WWW::Mechanize instance in an HTTP::Tiny
    compatible interface.

VERSION
    version 1.001001

SYNOPSIS
      # Get something that expects an HTTP::Tiny instance
      # to work with HTTP::Mechanize under the hood.
      #
      my $thing => ThingThatExpectsHTTPTiny->new(
        ua => HTTP::Tiny::Mech->new()
      );

      # Get something that expects HTTP::Tiny
      # to work via WWW::Mechanize::Cached
      #
      my $thing => ThingThatExpectsHTTPTiny->new(
        ua => HTTP::Tiny::Mech->new(
          mechua => WWW::Mechanize::Cached->new( )
        );
      );

DESCRIPTION
    This code is somewhat poorly documented, and highly experimental.

    Its the result of a quick bit of hacking to get "MetaCPAN::API" working
    faster via the "WWW::Mechanize::Cached" module ( and gaining cache
    persistence via "CHI" )

    It works so far for this purpose.

    At present, only "get" and "request" are implemented, and all other
    calls fall through to a native "HTTP::Tiny".

ATTRIBUTES
  "mechua"
    This class provides one non-standard parameter not in HTTP::Tiny,
    "mechua", which is normally an autovivified "WWW::Mechanize" instance.

    You may override this parameter if you want to provide a custom instance
    of a "WWW::Mechanize" class.

WRAPPED METHODS
  get
    Interface should be the same as it is with "get" in HTTP::Tiny.

  request
    Interface should be the same as it is with "request" in HTTP::Tiny

AUTHOR
    Kent Fredric <kentnl@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2014 by Kent Fredric <kentnl@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

